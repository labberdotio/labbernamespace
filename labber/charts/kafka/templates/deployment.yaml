---
apiVersion: apps/v1
kind: Deployment
metadata:
  # https://github.com/confluentinc/schema-registry/issues/689
  name: {{ .Release.Name }}-broker # kafka
  namespace: {{ .Release.Namespace }}
  labels:
    # role: broker # kafka
    app: {{ .Release.Name }}-broker # kafka
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    component: {{ .Release.Name }}
    managed-by: helm
spec:
  selector:
    matchLabels:
      app: {{ .Release.Name }}-broker # kafka
  replicas: 1
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-broker # kafka
    spec:
      containers:
      - name: broker # kafka
        # image: buildregistry.localdomain/cp-server:7.0.0
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        - name: KAFKA_BROKER_ID
          value: "1"
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: "{{ .Release.Name }}-zookeeper:2181"
        - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
          value: "PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
        - name: KAFKA_ADVERTISED_LISTENERS
          value: "PLAINTEXT://{{ .Release.Name }}-broker:29092,PLAINTEXT_HOST://{{ .Release.Name }}-broker:9092"
        - name: KAFKA_METRIC_REPORTERS
          value: "io.confluent.metrics.reporter.ConfluentMetricsReporter"
        - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS
          value: "0"
        - name: KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
          value: "1"
        - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_JMX_PORT
          value: "9101"
        - name: KAFKA_JMX_HOSTNAME
          value: "localhost"
        - name: KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL
          value: "http://schema-registry:8081"
        - name: CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS
          value: "{{ .Release.Name }}-broker:29092"
        - name: CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS
          value: "1"
        - name: CONFLUENT_METRICS_ENABLE
          value: "true"
        - name: CONFLUENT_SUPPORT_CUSTOMER_ID
          value: "anonymous"
        ports:
        - containerPort: 29092
        - containerPort: 9092
        - containerPort: 9101
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-broker # kafka
  namespace: {{ .Release.Namespace }}
  labels:
    # role: broker # kafka
    app: {{ .Release.Name }}-broker # kafka
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    component: {{ .Release.Name }}
    managed-by: helm
spec:
  ports:
  - name: port1
    protocol: TCP
    port: 29092
    targetPort: 29092
  - name: port2
    protocol: TCP
    port: 9092
    targetPort: 9092
  - name: port3
    protocol: TCP
    port: 9101
    targetPort: 9101
  selector:
    # role: broker # kafka
    app: {{ .Release.Name }}-broker # kafka
---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: {{ .Release.Name }}-broker # kafka
#   namespace: {{ .Release.Namespace }}
#   annotations:
#     kubernetes.io/ingress.class: "traefik"
# spec:
#   rules:
#   # - host: "{{ .Release.Name }}.localdomain"
#   # - host: "{{ .Values.global.domain.host }}.{{ .Values.global.domain.name }}"
#   - host: "gfs.{{ .Values.global.domain.name }}"
#     http:
#       paths:
#       - path: /kafka
#         pathType: Prefix
#         backend:
#           service:
#             name: {{ .Release.Name }}-kafka
#             port:
#               number: 29092
---
